spring:
  application:
    name: authpoint
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: postgres
    driverClassName: org.postgresql.Driver
  flyway:
    enabled: true
    validate-on-migrate: true
  config:
    activate:
      on-profile: default

jwt:
  secret: youshallnotpassyoushallnotpassyoushallnotpassyoushallnotpassyoushallnotpassyoushallnotpassyoushallnotpassyoushallnotpass

grpc:
  server:
    port: 9098

minio:
  bucketName: userprofilepics
  url: http://localhost:9000
  access_key: authpoint
  secret_key: youshallnotpass

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /docs/swagger-ui

kafka:
  topics:
    notification:
      destination: notifypoint.notifications
  clusters:
    default:
      bootstrap-servers:
        - localhost:29092
      properties:
        acks: -1
        delivery.timeout.ms: 90000
        batch.size: 10240
        linger.ms: 100
        max.in.flight.requests.per.connection: 5
        enable.idempotence: true
      producer:
        client-id: tanpii.authpoint
        value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      security:
        protocol: PLAINTEXT

web-clients:
  clients:
    bookpoint:
      destination: http://localhost:8081
      headers:
        X-INTERNAL-API: "AUTH_POINT_INTERNAL_KEY"

api:
  management:
    header: "X-MANAGEMENT-API"
    key: "AUTH-POINT"
